Task 3 : Create an Environment in CloudShell
Make sure you are in the N.Virginia Region.

Click on  icon (Cloud Shell) on the top right AWS menu bar.

A new tab in your browser opens and if you see a welcome message to cloud shell then click on the Close button in that message.

You will see a creating environment message on the screen.

     

         
Task 4: Install kubectl on AWS CloudShell
Once the environment is ready on CloudShell, Download the Amazon EKS vended kubectl binary for your cluster's Kubernetes version from Amazon S3. To do so, run the following command:

curl -o kubectl https://amazon-eks.s3.us-west-2.amazonaws.com/1.18.9/2020-11-02/bin/linux/amd64/kubectl

Apply execute permissions to the binary.

chmod +x ./kubectl

Copy the binary to a folder in your PATH. If you have already installed a version of kubectl, then we recommend creating a $HOME/bin/kubectl and ensuring that $HOME/bin comes first in your $PATH.

mkdir -p $HOME/bin && cp ./kubectl $HOME/bin/kubectl && export PATH=$PATH:$HOME/bin

After you install kubectl , you can verify its version with the following command:

kubectl version --short --client

 
Task 5: Configure your AWS CloudShell to communicate with your cluster
Once the environment is ready on CloudShell, you create a kubeconfig file for your cluster. The settings in this file enable the kubectl CLI to communicate with your cluster.

To create a kubeconfig file, run the following command:

aws eks update-kubeconfig --region us-east-1 --name whiz
Note: If your cluster name is not whiz, Update your cluster name in the above command.

Test your configuration, with the following command:

kubectl get svc
